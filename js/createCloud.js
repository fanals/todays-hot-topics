// Generated by CoffeeScript 1.3.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  define(['topStories', 'underscore', 'jquery'], function(topStoriesClass) {
    var createCloud;
    return createCloud = (function() {

      createCloud.prototype.indexesToHide = [0, 3, 4, 5, 6, 7, 8, 10, 11, 12, 15, 16, 17, 18, 19, 20, 22, 23, 24, 35, 36, 46, 47, 48, 49, 50, 58, 59];

      createCloud.prototype.numberOfTopics = 32;

      createCloud.prototype.cloudRowLength = 12;

      createCloud.prototype.pointsForAppearance = 20;

      createCloud.prototype.pointsForRanking = 10;

      createCloud.prototype.cloud = null;

      createCloud.prototype.classes = [];

      function createCloud(cloudDiv, cbDone) {
        var i, _i;
        this.cloudDiv = cloudDiv;
        this.cbDone = cbDone;
        this.create = __bind(this.create, this);

        this.cloudDiv.empty().append('<img id="loadingCloud" src="img/ajax-loader.gif" />');
        new topStoriesClass(this.numberOfTopics, this.pointsForAppearance, this.pointsForRanking, this.create);
        this.cloud = (function() {
          var _i, _results;
          _results = [];
          for (i = _i = 0; _i <= 59; i = ++_i) {
            _results.push({
              'name': 'a',
              'visible': (__indexOf.call(this.indexesToHide, i) < 0 ? 1 : 0),
              'points': 0
            });
          }
          return _results;
        }).call(this);
        i = 0;
        for (i = _i = 0; _i <= 90; i = ++_i) {
          if (i >= 50) {
            this.classes.push('important1');
          } else if (i >= 40) {
            this.classes.push('important2');
          } else if (i >= 30) {
            this.classes.push('important3');
          } else if (i >= 25) {
            this.classes.push('important4');
          } else {
            this.classes.push('important5');
          }
        }
      }

      createCloud.prototype.create = function(topStories) {
        var i;
        topStories = _(topStories).shuffle();
        i = 0;
        _(this.cloud).each(function(el) {
          var story;
          if (el.visible) {
            story = topStories[i++];
            el.name = story.name;
            return el.points = story.points;
          }
        });
        return this.display();
      };

      createCloud.prototype.display = function() {
        var HTML, cloudElement, i, l, style, topic, _i, _len, _ref;
        HTML = ["<div class='row' style='margin-top: 15px;'>"];
        i = 1;
        l = this.cloud.length;
        _ref = this.cloud;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          topic = _ref[_i];
          style = "opacity: " + topic.visible + ";";
          HTML.push("<div class='span1'><span class='" + this.classes[topic.points] + "' style='" + style + "'>" + topic.name + "</span></div>");
          if (i % this.cloudRowLength === 0 && i !== l) {
            HTML.push("</div>");
            HTML.push("<div class='row' style='margin-top: 10px;'>");
          }
          i++;
        }
        HTML.push("</div>");
        HTML.push("<button id='refreshButton' class='btn btn-primary'>Refresh</button>");
        cloudElement = $(this.cloudDiv).append(HTML.join(''));
        return this.checkCollisions(cloudElement);
      };

      createCloud.prototype.checkCollisions = function(cloudElement) {
        var _this = this;
        $(cloudElement).children().each(function(i, row) {
          return $(row).children().each(function(i, div) {
            var first, second;
            if ($(div).next().length) {
              first = $($(div).children()[0]);
              second = $($(div).next().children()[0]);
              if (_this.collision(first, second)) {
                if (parseInt(first.css('font-size').substr(0, 2)) >= parseInt(second.css('font-size').substr(0, 2))) {
                  return second.css('opacity', 0);
                } else {
                  return first.css('opacity', 0);
                }
              }
            }
          });
        });
        return this.cbDone();
      };

      createCloud.prototype.collision = function($div1, $div2) {
        var b1, b2, h1, h2, r1, r2, w1, w2, x1, x2, y1, y2;
        x1 = $div1.offset().left;
        y1 = $div1.offset().top;
        h1 = $div1.outerHeight(true);
        w1 = $div1.outerWidth(true);
        b1 = y1 + h1;
        r1 = x1 + w1;
        x2 = $div2.offset().left;
        y2 = $div2.offset().top;
        h2 = $div2.outerHeight(true);
        w2 = $div2.outerWidth(true);
        b2 = y2 + h2;
        r2 = x2 + w2;
        return !(b1 < y2 || y1 > b2 || r1 < x2 || x1 > r2);
      };

      return createCloud;

    })();
  });

}).call(this);
